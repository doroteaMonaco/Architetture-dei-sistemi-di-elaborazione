


ARM Macro Assembler    Page 1 


    1 00000000         ;r0-r3 are the argument and scratch registers; r0-r1 are
                        also the result registers
    2 00000000         ;r4-r8 are callee-save registers
    3 00000000         ;r9 might be a callee-save register or not (on some vari
                       ants of AAPCS it is a special register)
    4 00000000         ;r10-r11 are callee-save registers
    5 00000000         ;r12-r15 are special registers
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000        0 
                       VETT    RN               r0
   11 00000000        1 
                       dim     RN               r1
   12 00000000        2 
                       flag    RN               r2
   13 00000000         
   14 00000000        3 
                       media   RN               r3
   15 00000000        4 
                       i       RN               r4
   16 00000000        5 
                       vett_i  RN               r5
   17 00000000        6 
                       counter RN               r6
   18 00000000        8 
                       flag_value
                               RN               r8
   19 00000000         
   20 00000000                 AREA             functs,CODE,READONLY
   21 00000000         avg_vett
                               PROC
   22 00000000                 EXPORT           avg_vett
   23 00000000         
   24 00000000 E92D 4DF0       push{r4-r8,r10-r11,lr}
   25 00000004         
   26 00000004 F04F 0300       mov              media, #0
   27 00000008 F04F 0400       mov              i, #0
   28 0000000C         loop_calcolo_media
   29 0000000C F850 5024       ldr              vett_i, [VETT, i, lsl #2]
   30 00000010         
   31 00000010 442B            add              media, media, vett_i
   32 00000012         
   33 00000012 F104 0401       add              i, i, #1
   34 00000016 428C            cmp              i, dim
   35 00000018 D1F8            bne              loop_calcolo_media
   36 0000001A         
   37 0000001A FBB3 F3F1       udiv             media, media, dim
   38 0000001E         
   39 0000001E         
   40 0000001E F04F 0600       mov              counter, #0
   41 00000022 F04F 0400       mov              i, #0
   42 00000026         loop_counter
   43 00000026 F850 5024       ldr              vett_i, [VETT, i, lsl #2]
   44 0000002A         
   45 0000002A 429D            cmp              vett_i, media
   46 0000002C BF88 1C76       addhi            counter, counter, #1
   47 00000030         



ARM Macro Assembler    Page 2 


   48 00000030 F104 0401       add              i, i, #1
   49 00000034 428C            cmp              i, dim
   50 00000036 D1F6            bne              loop_counter
   51 00000038         
   52 00000038 4630            mov              r0, counter ; restituire numero
                                                             di valori sopra la
                                                             media
   53 0000003A         
   54 0000003A EA5F 0A56       lsrs             r10, counter, #1 ; guardo ultim
                                                            o bit per capire se
                                                             pari o dispari, ve
                                                            dendo il flag carry
                                                            
   55 0000003E BF2C F04F 
              0800             movcs            flag_value, #0 ; uso conditiona
                                                            l instruction
   56 00000044 F04F 0801       movcc            flag_value, #1 ; flag=1 se pari
                                                            , flag=0 se dispari
                                                            
   57 00000048         
   58 00000048 F882 8000       strb             flag_value, [flag]
   59 0000004C         
   60 0000004C E8BD 8DF0       pop{r4-r8,r10-r11,pc}
   61 00000050                 ENDP
   62 00000050         
   63 00000050                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\functions.d -o.\functions.o -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\P
ACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2
.7.1\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION 
SETA 536" --predefine="_RTE_ SETA 1" --predefine="LPC175x_6x SETA 1" --predefin
e="_RTE_ SETA 1" --list=.\functions.lst functions.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

avg_vett 00000000

Symbol: avg_vett
   Definitions
      At line 21 in file functions.s
   Uses
      At line 22 in file functions.s
Comment: avg_vett used once
functs 00000000

Symbol: functs
   Definitions
      At line 20 in file functions.s
   Uses
      None
Comment: functs unused
loop_calcolo_media 0000000C

Symbol: loop_calcolo_media
   Definitions
      At line 28 in file functions.s
   Uses
      At line 35 in file functions.s
Comment: loop_calcolo_media used once
loop_counter 00000026

Symbol: loop_counter
   Definitions
      At line 42 in file functions.s
   Uses
      At line 50 in file functions.s
Comment: loop_counter used once
4 symbols
346 symbols in table
